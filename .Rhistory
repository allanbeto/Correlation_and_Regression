sd()
getwd()
install.packages(packrat)
install.packages("packrat")
install.packages("packrat")
packrat::init()
packrat::snapshot()
knitr::opts_chunk$set(echo = TRUE)
install.packages("openintro")
install.packages("ggplot2")
install.packages("dplyr")
library("openintro")
library("ggplot2")
library("dplyr")
# install.packages("openintro")
# install.packages("ggplot2")
# install.packages("dplyr")
library("openintro")
library("ggplot2")
library("dplyr")
# Scatterplot of weight vs. weeks
ggplot(data = ncbirths, aes(x=weeks, y= weight))+
geom_point()
# Boxplot of weight vs. weeks
ggplot(data = ncbirths,
aes(x = cut(weeks, breaks = 5), y = weight)) +
geom_boxplot()
# Mammals scatterplot
ggplot(data = mammals, aes(x= BodyWt, y=BrainWt))+
geom_point()
# Baseball player scatterplot
ggplot(data = mlbBat10, aes(x = OBP, y = SLG)) +
geom_point()
# Body dimensions scatterplot
ggplot(data = bdims, aes(x = hgt, y = wgt, color = factor(sex))) +
geom_point()
# Smoking scatterplot
ggplot(data = smoking, aes(x =age , y = amtWeekdays)) +
geom_point()
# Scatterplot with coord_trans()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
coord_trans(x = "log10", y = "log10")
# Scatterplot with scale_x_log10() and scale_y_log10()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
scale_x_log10() + scale_y_log10()
# Scatterplot of SLG vs. OBP
mlbBat10 %>%
filter(AB >= 200) %>%
ggplot(aes(x = OBP, y = SLG)) +
geom_point()
# Identify the outlying player
mlbBat10 %>%
filter(AB >= 200, OBP < .2)
ncbirths
# install.packages("openintro")
# install.packages("ggplot2")
# install.packages("dplyr")
library("openintro")
library("ggplot2")
library("dplyr")
# Scatterplot of weight vs. weeks
ggplot(data = ncbirths, aes(x=weeks, y= weight))+
geom_point()
# Boxplot of weight vs. weeks
ggplot(data = ncbirths,
aes(x = cut(weeks, breaks = 5), y = weight)) +
geom_boxplot()
# Mammals scatterplot
ggplot(data = mammals, aes(x= BodyWt, y=BrainWt))+
geom_point()
# Baseball player scatterplot
ggplot(data = mlbBat10, aes(x = OBP, y = SLG)) +
geom_point()
# Body dimensions scatterplot
ggplot(data = bdims, aes(x = hgt, y = wgt, color = factor(sex))) +
geom_point()
# Smoking scatterplot
ggplot(data = smoking, aes(x =age , y = amtWeekdays)) +
geom_point()
# Scatterplot with coord_trans()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
coord_trans(x = "log10", y = "log10")
# Scatterplot with scale_x_log10() and scale_y_log10()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
scale_x_log10() + scale_y_log10()
# Scatterplot of SLG vs. OBP
mlbBat10 %>%
filter(AB >= 200) %>%
ggplot(aes(x = OBP, y = SLG)) +
geom_point()
# Identify the outlying player
mlbBat10 %>%
filter(AB >= 200, OBP < .2)
ncbirths
head(ncbirths)
# Compute correlation
ncbirths %>%
summarize(N = n(), r = cor(weight, mage))
# Compute correlation for all non-missing pairs
ncbirths %>%
summarize(N = n(), r = cor(weight, weeks, use = "pairwise.complete.obs" ))
head(Anscombe)
# Compute properties of Anscombe
Anscombe %>%
group_by(set) %>%
summarize(N = n(), mean(x), sd(x), mean(y), sd(y), cor(x,y))
ggplot(data = Anscombe, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~ set)
data("anscombe")
Anscombe %>%
group_by(set) %>%
summarize(N = n(), mean(x), sd(x), mean(y), sd(y), cor(x,y))
data(Amscombe)
anscombe
?anscombe
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
knitr::opts_chunk$set(echo = TRUE)
anscombe %>%
group_by(set) %>%
summarize(N = n(), mean(x), sd(x), mean(y), sd(y), cor(x,y))
knitr::opts_chunk$set(echo = TRUE)
# install.packages("openintro")
# install.packages("ggplot2")
# install.packages("dplyr")
library("openintro")
library("ggplot2")
library("dplyr")
# Scatterplot of weight vs. weeks
ggplot(data = ncbirths, aes(x=weeks, y= weight))+
geom_point()
# Boxplot of weight vs. weeks
ggplot(data = ncbirths,
aes(x = cut(weeks, breaks = 5), y = weight)) +
geom_boxplot()
# Mammals scatterplot
ggplot(data = mammals, aes(x= BodyWt, y=BrainWt))+
geom_point()
# Baseball player scatterplot
ggplot(data = mlbBat10, aes(x = OBP, y = SLG)) +
geom_point()
# Body dimensions scatterplot
ggplot(data = bdims, aes(x = hgt, y = wgt, color = factor(sex))) +
geom_point()
# Smoking scatterplot
ggplot(data = smoking, aes(x =age , y = amtWeekdays)) +
geom_point()
# Scatterplot with coord_trans()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
coord_trans(x = "log10", y = "log10")
# Scatterplot with scale_x_log10() and scale_y_log10()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
scale_x_log10() + scale_y_log10()
# Scatterplot of SLG vs. OBP
mlbBat10 %>%
filter(AB >= 200) %>%
ggplot(aes(x = OBP, y = SLG)) +
geom_point()
# Identify the outlying player
mlbBat10 %>%
filter(AB >= 200, OBP < .2)
# Compute correlation
ncbirths %>%
summarize(N = n(), r = cor(weight, mage))
# Compute correlation for all non-missing pairs
ncbirths %>%
summarize(N = n(), r = cor(weight, weeks, use = "pairwise.complete.obs" ))
# Compute properties of Anscombe
anscombe %>%
group_by(set) %>%
summarize(N = n(), mean(x), sd(x), mean(y), sd(y), cor(x,y))
anscombe
data("anscombe")
data("anscombe")
anscombe.1 <- data.frame(x = anscombe[["x1"]], y = anscombe[["y1"]], Set = "1")
anscombe.2 <- data.frame(x = anscombe[["x2"]], y = anscombe[["y2"]], Set = "2")
anscombe.3 <- data.frame(x = anscombe[["x3"]], y = anscombe[["y3"]], Set = "3")
anscombe.4 <- data.frame(x = anscombe[["x4"]], y = anscombe[["y4"]], Set = "4")
Anscombe <- rbind(anscombe.1, anscombe.2, anscombe.3, anscombe.4)
head(Anscombe)
data("anscombe")
anscombe.1 <- data.frame(x = anscombe[["x1"]], y = anscombe[["y1"]], set = "1")
anscombe.2 <- data.frame(x = anscombe[["x2"]], y = anscombe[["y2"]], set = "2")
anscombe.3 <- data.frame(x = anscombe[["x3"]], y = anscombe[["y3"]], set = "3")
anscombe.4 <- data.frame(x = anscombe[["x4"]], y = anscombe[["y4"]], set = "4")
Anscombe <- rbind(anscombe.1, anscombe.2, anscombe.3, anscombe.4)
# Compute properties of Anscombe
Anscombe %>%
group_by(set) %>%
summarize(N = n(), mean(x), sd(x), mean(y), sd(y), cor(x,y))
ggplot(data = Anscombe, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~ set)
Anscombe <- anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1) %>%
spread(key = variable, value = val)"
Anscombe
library(ggplot2)
require(dplyr)
library(tidyr)
Anscombe <- anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1) %>%
spread(key = variable, value = val)
Anscombe
data("anscombe")
Anscombe <- anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1) %>%
spread(key = variable, value = val)
ggplot(data = Anscombe, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~ set)
anscombe
head(Anscombe)
anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id)
anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1)
data("anscombe")
Anscombe <- anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1) %>%
spread(key = variable, value = val)
head(Anscombe)
ggplot(data = Anscombe, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~ set)
# Compute properties of Anscombe
Anscombe %>%
group_by(set) %>%
summarize(N = n(), mean(x), sd(x), mean(y), sd(y), cor(x,y))
knitr::opts_chunk$set(echo = TRUE)
data("anscombe")
Anscombe <- anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1) %>%
spread(key = variable, value = val)
# install.packages("openintro")
# install.packages("ggplot2")
# install.packages("dplyr")
library("openintro")
library("ggplot2")
library("dplyr")
# Scatterplot of weight vs. weeks
ggplot(data = ncbirths, aes(x=weeks, y= weight))+
geom_point()
# Boxplot of weight vs. weeks
ggplot(data = ncbirths,
aes(x = cut(weeks, breaks = 5), y = weight)) +
geom_boxplot()
# Mammals scatterplot
ggplot(data = mammals, aes(x= BodyWt, y=BrainWt))+
geom_point()
# Baseball player scatterplot
ggplot(data = mlbBat10, aes(x = OBP, y = SLG)) +
geom_point()
# Body dimensions scatterplot
ggplot(data = bdims, aes(x = hgt, y = wgt, color = factor(sex))) +
geom_point()
# Smoking scatterplot
ggplot(data = smoking, aes(x =age , y = amtWeekdays)) +
geom_point()
# Scatterplot with coord_trans()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
coord_trans(x = "log10", y = "log10")
# Scatterplot with scale_x_log10() and scale_y_log10()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
scale_x_log10() + scale_y_log10()
# Scatterplot of SLG vs. OBP
mlbBat10 %>%
filter(AB >= 200) %>%
ggplot(aes(x = OBP, y = SLG)) +
geom_point()
# Identify the outlying player
mlbBat10 %>%
filter(AB >= 200, OBP < .2)
# Compute correlation
ncbirths %>%
summarize(N = n(), r = cor(weight, mage))
# Compute correlation for all non-missing pairs
ncbirths %>%
summarize(N = n(), r = cor(weight, weeks, use = "pairwise.complete.obs" ))
#pre-exercise codetools
data("anscombe")
Anscombe <- anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1) %>%
spread(key = variable, value = val)
library("tidyr")
# install.packages("openintro")
# install.packages("ggplot2")
# install.packages("dplyr")
library("openintro")
library("ggplot2")
library("dplyr")
library("tidyr")
# Scatterplot of weight vs. weeks
ggplot(data = ncbirths, aes(x=weeks, y= weight))+
geom_point()
# Boxplot of weight vs. weeks
ggplot(data = ncbirths,
aes(x = cut(weeks, breaks = 5), y = weight)) +
geom_boxplot()
# Mammals scatterplot
ggplot(data = mammals, aes(x= BodyWt, y=BrainWt))+
geom_point()
# Baseball player scatterplot
ggplot(data = mlbBat10, aes(x = OBP, y = SLG)) +
geom_point()
# Body dimensions scatterplot
ggplot(data = bdims, aes(x = hgt, y = wgt, color = factor(sex))) +
geom_point()
# Smoking scatterplot
ggplot(data = smoking, aes(x =age , y = amtWeekdays)) +
geom_point()
# Scatterplot with coord_trans()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
coord_trans(x = "log10", y = "log10")
# Scatterplot with scale_x_log10() and scale_y_log10()
ggplot(data = mammals, aes(x = BodyWt, y = BrainWt)) +
geom_point() +
scale_x_log10() + scale_y_log10()
# Scatterplot of SLG vs. OBP
mlbBat10 %>%
filter(AB >= 200) %>%
ggplot(aes(x = OBP, y = SLG)) +
geom_point()
# Identify the outlying player
mlbBat10 %>%
filter(AB >= 200, OBP < .2)
# Compute correlation
ncbirths %>%
summarize(N = n(), r = cor(weight, mage))
# Compute correlation for all non-missing pairs
ncbirths %>%
summarize(N = n(), r = cor(weight, weeks, use = "pairwise.complete.obs" ))
#pre-exercise codetools
data("anscombe")
Anscombe <- anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1) %>%
spread(key = variable, value = val)
head(Anscombe)
ggplot(data = Anscombe, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~ set)
# Compute properties of Anscombe
Anscombe %>%
group_by(set) %>%
summarize(N = n(), mean(x), sd(x), mean(y), sd(y), cor(x,y))
library(ggplot2)
require(dplyr)
Anscombe <- anscombe %>%
mutate(id = 1:nrow(.)) %>%
gather(key = "key", value = "val", -id) %>%
separate(key, into = c("variable", "set"), sep = 1) %>%
spread(key = variable, value = val)
# Correlation for all baseball players
mlbBat10 %>%
summarize(N = n(), r = cor(OBP, SLG))
# Correlation for all players with at least 200 ABs
mlbBat10 %>%
filter(AB >= 200 ) %>%
summarize(N = n(), r = cor(OBP, SLG))
# Correlation of body dimensions
bdims %>%
group_by(sex) %>%
summarize(N = n(), r = cor(wgt, hgt))
# Correlation among mammals, with and without log
mammals %>%
summarize(N = n(),
r = cor(BodyWt, BrainWt),
r_log = cor(log(BodyWt), log(BrainWt)))
n <- 1000
k <- 20
noise <- data.frame(y = rnorm(n), x = rnorm(n), z = rep(1:k))
# Create faceted scatterplot
ggplot(data = noise, aes(x = x, y = y)) +
geom_point() +
facet_wrap(~ z)
# Compute correlations for each dataset
noise_summary <- noise %>%
group_by(z) %>%
summarize(N = n(), spurious_cor = cor(x, y))
# Isolate sets with correlations above 0.2 in absolute strength
noise_summary %>%
filter(abs(spurious_cor) > 0.2)
# Scatterplot with regression line
ggplot(data = bdims, aes(x =hgt, y = wgt)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE)
add_line <- function (my_slope) {
bdims_summary <- bdims %>%
summarize(N = n(), r = cor(hgt, wgt),
mean_hgt = mean(hgt), mean_wgt = mean(wgt),
sd_hgt = sd(hgt), sd_wgt = sd(wgt)) %>%
mutate(true_slope = r * sd_wgt / sd_hgt,
true_intercept = mean_wgt - true_slope * mean_hgt)
p <- ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_point(data = bdims_summary,
aes(x = mean_hgt, y = mean_wgt),
color = "red", size = 3)
my_data <- bdims_summary %>%
mutate(my_slope = my_slope,
my_intercept = mean_wgt - my_slope * mean_hgt)
p + geom_abline(data = my_data,
aes(intercept = my_intercept, slope = my_slope), color = "dodgerblue")
}
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point()
# Estimate optimal value of my_slope
add_line(my_slope = 1)
add_line <- function (my_slope) {
bdims_summary <- bdims %>%
summarize(N = n(), r = cor(hgt, wgt),
mean_hgt = mean(hgt), mean_wgt = mean(wgt),
sd_hgt = sd(hgt), sd_wgt = sd(wgt)) %>%
mutate(true_slope = r * sd_wgt / sd_hgt,
true_intercept = mean_wgt - true_slope * mean_hgt)
p <- ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point() +
geom_point(data = bdims_summary,
aes(x = mean_hgt, y = mean_wgt),
color = "red", size = 3)
my_data <- bdims_summary %>%
mutate(my_slope = my_slope,
my_intercept = mean_wgt - my_slope * mean_hgt)
p + geom_abline(data = my_data,
aes(intercept = my_intercept, slope = my_slope), color = "dodgerblue")
}
ggplot(data = bdims, aes(x = hgt, y = wgt)) +
geom_point()
# Estimate optimal value of my_slope
add_line(my_slope = 1)
# Print bdims_summary
bdims_summary
bdims_summary <- bdims %>%
summarize(N = n(), r = cor(hgt, wgt),
mean_hgt = mean(hgt), mean_wgt = mean(wgt),
sd_hgt = sd(hgt), sd_wgt = sd(wgt))
# Print bdims_summary
bdims_summary
# Add slope and intercept
bdims_summary %>%
mutate(slope = r*sd_wgt/sd_hgt,
intercept = mean_wgt-(slope)*mean_hgt)
